{%- extends 'display_priority.j2' -%}
{% from 'celltags.j2' import celltags %}

{% block codecell %}
{{ super() }}
{%- endblock codecell %}

{% block input_group -%}
<div class="column is-12">
<div class="container">
<div class="content">
<div class="card">
{{ super() }}
</div>
</div>
</div>
</div>
{% endblock input_group %}

{% block input %}
<div class="column is-12" data-type="inline">
{% raw %}{{< highlight python "linenos=table,linenostart=1" >}}{% endraw %}
{{ cell.source }}
{% raw %}{{< / highlight >}}{% endraw %}
</div>
{%- endblock input %}

{% block output_group %}
<div class="column is-12">
<div class="container">
<div class="content">
{%- if resources.global_content_filter.include_input_prompt -%}
<div class="card">
{%- endif -%}
{{ super() }}
{%- if resources.global_content_filter.include_input_prompt -%}
</div>
{%- endif -%}
</div>
</div>
</div>
{% endblock output_group %}

{% block outputs %}
{{ super() }}
{% endblock outputs %}

{% block in_prompt -%}
  <header class="card-header">
    {%- if cell.execution_count is defined -%}
        <p class="card-header-title">In&nbsp;[{{ cell.execution_count|replace(None, "&nbsp;") }}]:</p>
    {%- else -%}
        <p class="card-header-title">In&nbsp;[&nbsp;]:</p>
    {%- endif -%}
    <button class="card-header-icon" aria-label="more options">
      <span class="icon">
        <i class="fas fa-angle-down" aria-hidden="true"></i>
      </span>
    </button>
  </header>
{%- endblock in_prompt %}

{% block empty_in_prompt -%}
{%- endblock empty_in_prompt %}

{#
  output_prompt doesn't do anything in HTML,
  because there is a prompt div in each output area (see output block)
 #}
{% block output_prompt %}
{% endblock output_prompt %}

{% block output_area_prompt %}
{%- if output.output_type == 'execute_result' -%}
{%- if resources.global_content_filter.include_input_prompt -%}
  <header class="card-header">
    {%- if cell.execution_count is defined -%}
        <p class="card-header-title">Out[{{ cell.execution_count|replace(None, "&nbsp;") }}]:</p>
    {%- else -%}
        <p class="card-header-title">Out[&nbsp;]:</p>
    {%- endif -%}
    <button class="card-header-icon" aria-label="more options">
      <span class="icon">
        <i class="fas fa-angle-down" aria-hidden="true"></i>
      </span>
    </button>
    </header>
{%- endif -%}
{%- endif -%}
{% endblock output_area_prompt %}

{% block output %}
{% if resources.global_content_filter.include_output_prompt %}
    {{ self.output_area_prompt() }}
{% endif %}
{{ super() }}
{% endblock output %}

{% block markdowncell scoped %}
<div class="column is-12">
<div class="container">
<div class="content">
{%- if resources.global_content_filter.include_input_prompt-%}
    {{ self.empty_in_prompt() }}
{%- endif -%}
{{ cell.source  | markdown2html | strip_files_prefix }}
</div>
</div>
</div>
{%- endblock markdowncell %}

{% block unknowncell scoped %}
<h1>unknowncell scoped</h1>
unknown type  {{ cell.type }}
{% endblock unknowncell %}

{% block execute_result -%}
{% block data_priority scoped %}
{{ super() }}
{% endblock data_priority %}
{%- set extra_class="" -%}
{%- endblock execute_result %}

{% block stream_stdout -%}
<div class="column is-12">
<div class="container">
<div class="content">
<pre class="notification is-warning is-full" data-mime-type="application/vnd.jupyter.stderr">
{{- output.text | ansi2html -}}
</pre>
</div>
</div>
</div>
{%- endblock stream_stdout %}

{% block stream_stderr -%}
{%- if resources.global_content_filter.include_output_stdin -%}
<div class="column is-12">
<div class="content">
<pre class="notification is-danger is-full" data-mime-type="application/vnd.jupyter.stderr">
{{- output.text | ansi2html -}}
</pre>
</div>
</div>
{%- endif %}
{%- endblock stream_stderr %}

{% block stream_stdin -%}
{%- if resources.global_content_filter.include_output_stdin -%}
<h1>include_output_stdin</h1>
<div class="jp-RenderedText jp-OutputArea-output" data-mime-type="application/vnd.jupyter.stdin">
<pre>
{{- output.text | ansi2html -}}
</pre>
</div>
{%- endif %}
{%- endblock stream_stdin %}

{% block data_svg scoped -%}
{% set svg_id = (range(1, 51) | random) %}
<div class="column is-12 has-text-centered">
<div class="container">
<div class="content">
{%- if output.svg_filename %}
<div class="figure spotlight" href="{{ output.svg_filename | posix_path }}" data-mime-type="image/svg+xml">
<img src="{{ output.svg_filename | posix_path }}">
{%- else %}
<div style="display: none;">
<div id="svg_{{ svg_id }}" class="figure has-text-centered" style="background-color: White;" data-mime-type="image/svg+xml">
{{ output.data['image/svg+xml'] }}
</div>
</div>
<div class="figure spotlight" data-media="node" data-src="#svg_{{ svg_id }}" data-mime-type="image/svg+xml">
{{ output.data['image/svg+xml'] }}
{%- endif %}
<p class="content">{{ cell.metadata.caption }}</p>
</div>
</div>
</div>
</div>
{%- endblock data_svg %}

{% block data_html scoped -%}
<div class="column is-12" data-mime-type="text/html">
<div class="container">
<div class="content">
{{ output.data['text/html'] }}
</div>
</div>
</div>
{%- endblock data_html %}

{% block data_markdown scoped -%}
<h1>data_markdown_scoped</h1>
<div class="jp-RenderedHTMLCommon jp-RenderedMarkdown jp-OutputArea-output {{ extra_class }}" data-mime-type="text/markdown">
{{ output.data['text/markdown'] | markdown2html }}
</div>
{%- endblock data_markdown %}

{% block data_png scoped %}
<div class="column is-12  has-text-centered">
<div class="container">
<div class="content">
{%- if 'image/png' in output.metadata.get('filenames', {}) %}
<div class="figure spotlight" data-src="{{ output.metadata.filenames['image/png'] | posix_path }}" data-mime-type="image/png">
<img src="{{ output.metadata.filenames['image/png'] | posix_path }}"
{%- else %}
<div class="figure" data-mime-type="image/png">
<img src="data:image/png;base64,{{ output.data['image/png'] }}"
{%- endif %}
{%- set width=output | get_metadata('width', 'image/png') -%}
{%- if width is not none %}
width={{ width }}
{%- endif %}
{%- set height=output | get_metadata('height', 'image/png') -%}
{%- if height is not none %}
height={{ height }}
{%- endif %}
{%- if output | get_metadata('unconfined', 'image/png') %}
class="unconfined"
{%- endif %}
>
<p class="content">{{ cell.metadata.caption }}</p>
</div>
</div>
</div>
</div>
{%- endblock data_png %}

{% block data_jpg scoped %}
<div class="column is-12 has-text-centered">
<div class="container">
<div class="content">
{%- if 'image/jpeg' in output.metadata.get('filenames', {}) %}
<div class="figure spotlight" data-src="{{ output.metadata.filenames['image/jpeg'] | posix_path }}" data-mime-type="image/jpeg">
<img src="{{ output.metadata.filenames['image/jpeg'] | posix_path }}"
{%- else %}
<div class="figure" data-mime-type="image/jpeg">
<img src="data:image/jpeg;base64,{{ output.data['image/jpeg'] }}"
{%- endif %}
{%- set width=output | get_metadata('width', 'image/jpeg') -%}
{%- if width is not none %}
width={{ width }}
{%- endif %}
{%- set height=output | get_metadata('height', 'image/jpeg') -%}
{%- if height is not none %}
height={{ height }}
{%- endif %}
{%- if output | get_metadata('unconfined', 'image/jpeg') %}
class="unconfined"
{%- endif %}
>
<p class="content">{{ cell.metadata.caption }}</p>
</div>
</div>
</div>
</div>
{%- endblock data_jpg %}

{% block data_latex scoped %}
<div class="jp-RenderedLatex jp-OutputArea-output {{ extra_class }}" data-mime-type="text/latex">
{{ output.data['text/latex'] | e }}
<p class="content">{{ cell.metadata.caption }}</p>
</div>
{%- endblock data_latex %}

{% block error -%}
<h1>error</h1>
<div class="jp-RenderedText jp-OutputArea-output" data-mime-type="application/vnd.jupyter.stderr">
<pre>
{{- super() -}}
</pre>
</div>
{%- endblock error %}

{%- block traceback_line %}
{{ line | ansi2html }}
{%- endblock traceback_line %}

{%- block data_text scoped %}
<div class="jp-RenderedText jp-OutputArea-output {{ extra_class }}" data-mime-type="text/plain">
<pre>
{{- output.data['text/plain'] | ansi2html -}}
</pre>
</div>
{%- endblock -%}

{#
 ###############################################################################
 # TODO: how to better handle JavaScript repr?                                 #
 ###############################################################################
 #}

{% set div_id = uuid4() %}
{%- block data_javascript scoped %}
<!-- h1>javascript scoped</h1>
<div id="{{ div_id }}" class="jp-RenderedJavaScript jp-OutputArea-output {{ extra_class }}" data-mime-type="application/javascript" -->
<script type="text/javascript">
//var element = document.getElementById('{{ div_id }}');
{{ output.data['application/javascript'] }}
</script>
<!-- /div -->
{%- endblock -%}

{%- block data_widget_state scoped %}
<h1>widget state</h1>
{% set div_id = uuid4() %}
{% set datatype_list = output.data | filter_data_type %}
{% set datatype = datatype_list[0]%}
<div id="{{ div_id }}" class="output_subarea output_widget_state {{ extra_class }}">
<script type="text/javascript">
var element = document.getElementById('{{ div_id }}');
</script>
<script type="{{ datatype }}">
{{ output.data[datatype] | json_dumps }}
</script>
</div>
{%- endblock data_widget_state -%}

{%- block data_widget_view scoped %}
<h1>widget view</h1>
{% set div_id = uuid4() %}
{% set datatype_list = output.data | filter_data_type %}
{% set datatype = datatype_list[0]%}
<div id="{{ div_id }}" class="jupyter-widgets jp-OutputArea-output {{ extra_class }}">
<script type="text/javascript">
var element = document.getElementById('{{ div_id }}');
</script>
<script type="{{ datatype }}">
{{ output.data[datatype] | json_dumps }}
</script>
</div>
{%- endblock data_widget_view -%}

{%- block footer %}
{% set mimetype = 'application/vnd.jupyter.widget-state+json'%}
{% if mimetype in nb.metadata.get("widgets",{})%}
<script type="{{ mimetype }}">
{{ nb.metadata.widgets[mimetype] | json_dumps | escape_html_script }}
</script>
{% endif %}
{{ super() }}
{%- endblock footer-%}
