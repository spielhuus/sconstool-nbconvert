 
{%- extends 'display_priority.j2' -%}
{% from 'celltags.j2' import celltags %}

{% block codecell %}
<!-- start codecell -->
{{ super() }}
<!-- end codecell -->
{%- endblock codecell %}

{% block input_group -%}
<!-- start input group -->
{{ super() }}
<!-- end input group -->
{% endblock input_group %}

{% block input %}
<!-- start input -->
<div class="jp-CodeMirrorEditor jp-Editor jp-InputArea-editor" data-type="inline">
     <div class="CodeMirror cm-s-jupyter">
{{ cell.source | highlight_code(metadata=cell.metadata) }}
     </div>
</div>
<!-- end input  -->
{%- endblock input %}

{% block execute_result -%}
<!-- start execute result -->
{% block data_priority scoped %}
{{ super() }}
{% endblock data_priority %}
<!-- end execute result -->
{%- endblock execute_result %}

{% block output_area_prompt %}
    <div class="jp-OutputPrompt jp-OutputArea-prompt">
{%- if output.output_type == 'execute_result' -%}
    {%- if cell.execution_count is defined -%}
        Out[{{ cell.execution_count|replace(None, "&nbsp;") }}]:
    {%- else -%}
        Out[&nbsp;]:
    {%- endif -%}
{%- endif -%}
    </div>
{% endblock output_area_prompt %}

{% block output %}
<!-- start output -->
{{ super() }}
<!-- end output -->
{% endblock output %}

{% block output_group %}
<!-- start output group -->
{{ super() }}
<!-- end output group -->
{% endblock output_group %}

{% block outputs %}
<!-- start outputs -->
{{ super() }}
<!-- end outputs -->
{% endblock outputs %}

{% block unknowncell scoped %}
<!-- start unknowncell scoped -->
unknown type  {{ cell.type }}
<!-- end unknowncell scoped -->
{% endblock unknowncell %}

{% block stream_stdout -%}
<!-- start stdout -->
<!-- end stdout -->
{%- endblock stream_stdout %}

{% block stream_stderr -%}
<!-- start stderr -->
<!-- end stderr -->
{%- endblock stream_stderr %}

{% block markdowncell scoped %}
<!-- div class="columns is-mobile is-multiline is-12" -->
<div class="section">
<div class="container">
{%- if resources.global_content_filter.include_input_prompt-%}
    {{ self.empty_in_prompt() }}
{%- endif -%}
<div class="content" data-mime-type="text/markdown">
{{ cell.source  | markdown2html | strip_files_prefix }}
</div>
</div>
</div>
{%- endblock markdowncell %}

{% block data_html scoped -%}
<!-- start html scoped -->
<div class="jp-RenderedHTMLCommon jp-RenderedHTML jp-OutputArea-output {{ extra_class }}" data-mime-type="text/html">
{{ output.data['text/html'] }}
</div>
<!-- emd html scoped -->
{%- endblock data_html %}

{%- block data_javascript scoped %}
<script type="text/javascript">
{{ output.data['application/javascript'] }}
</script>
{%- endblock -%}

{%- block data_markdown scoped %}
<div class="section">
<div class="container">
{%- if resources.global_content_filter.include_input_prompt-%}
    {{ self.empty_in_prompt() }}
{%- endif -%}
<div class="content" data-mime-type="text/markdown">
{{ output.data['text/markdown'] }}
</div>
</div>
</div>
{%- endblock -%}

{%- block data_latex scoped %}
<div class="section">
<div class="container">
{%- if resources.global_content_filter.include_input_prompt-%}
    {{ self.empty_in_prompt() }}
{%- endif -%}
<div class="content" data-mime-type="text/latex">
{{ output.data['text/latex'] }}
</div>
</div>
</div>
{%- endblock -%}

{% block data_svg scoped -%}
<div class="column is-12 has-text-centered mb-6" data-mime-type="image/svg+xml">
{%- if output.svg_filename %}
<image src="{{ output.svg_filename | posix_path }}"></image>
{%- else %}
{{ output.data['image/svg+xml'] }}
{%- endif %}
<p class="content">{{ cell.metadata.caption }}</p>
</div>
{%- endblock data_svg %}

{% block error -%}
<!-- start error-->
<div class="jp-RenderedText jp-OutputArea-output" data-mime-type="application/vnd.jupyter.stderr">
<pre>
{{- super() -}}
</pre>
</div>
<!-- end error-->
{%- endblock error %}

{%- block data_text scoped %}
<!-- start text-->
<div class="jp-RenderedText jp-OutputArea-output {{ extra_class }}" data-mime-type="text/plain">
<pre>
{{- output.data['text/plain'] | ansi2html -}}
</pre>
</div>
<!-- end text-->
{%- endblock -%}

{%- block footer %}
<!-- start footer-->
{% set mimetype = 'application/vnd.jupyter.widget-state+json'%}
{% if mimetype in nb.metadata.get("widgets",{})%}
<script type="{{ mimetype }}">
{{ nb.metadata.widgets[mimetype] | json_dumps }}
</script>
{% endif %}
{{ super() }}
<!-- end footer-->
{%- endblock footer-%}
